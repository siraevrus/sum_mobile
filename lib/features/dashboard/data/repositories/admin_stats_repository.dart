import 'package:riverpod_annotation/riverpod_annotation.dart';
import 'package:sum_warehouse/features/dashboard/data/datasources/admin_stats_datasource.dart';
import 'package:sum_warehouse/shared/models/admin_stats_model.dart';

part 'admin_stats_repository.g.dart';

/// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
abstract class AdminStatsRepository {
  Future<AdminDashboardStats> getDashboardStats();
  Future<ProductStatsModel> getProductsStats();
  Future<SalesStatsModel> getSalesStats();
  Future<UsersStatsModel> getUsersStats();
  Future<WarehousesStatsModel> getWarehousesStats();
}

/// –†–µ–∞–ª–∏–∑–∞—Ü–∏—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
class AdminStatsRepositoryImpl implements AdminStatsRepository {
  final AdminStatsDataSource _dataSource;

  AdminStatsRepositoryImpl(this._dataSource);

  @override
  Future<AdminDashboardStats> getDashboardStats() async {
    try {
      print('üîµ AdminStatsRepository: –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏...');
      
      // –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ –ø–æ–ª—É—á–∞–µ–º –≤—Å–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥–ª—è –ª—É—á—à–µ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
      print('üîµ –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ç–æ–≤–∞—Ä–æ–≤...');
      final productsResponse = await _dataSource.getProductsStats();
      print('‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ –∑–∞–≥—Ä—É–∂–µ–Ω–∞');
      
      print('üîµ –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø—Ä–æ–¥–∞–∂...');
      final salesResponse = await _dataSource.getSalesStats();
      print('‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–¥–∞–∂ –∑–∞–≥—Ä—É–∂–µ–Ω–∞');
      
      print('üîµ –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...');
      final usersResponse = await _dataSource.getUsersStats();
      print('‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞–≥—Ä—É–∂–µ–Ω–∞');
      
      print('üîµ –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å–∫–ª–∞–¥–æ–≤...');
      final warehousesResponse = await _dataSource.getWarehousesStats();
      print('‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∫–ª–∞–¥–æ–≤ –∑–∞–≥—Ä—É–∂–µ–Ω–∞');

      final result = AdminDashboardStats(
        products: productsResponse.data,
        sales: salesResponse.data,
        users: usersResponse.data,
        warehouses: warehousesResponse.data,
      );
      
      print('‚úÖ AdminStatsRepository: –í—Å—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–∞');
      return result;
    } catch (e, stackTrace) {
      print('üî¥ AdminStatsRepository: –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: $e');
      print('üî¥ StackTrace: $stackTrace');
      rethrow;
    }
  }

  @override
  Future<ProductStatsModel> getProductsStats() async {
    final response = await _dataSource.getProductsStats();
    return response.data;
  }

  @override
  Future<SalesStatsModel> getSalesStats() async {
    final response = await _dataSource.getSalesStats();
    return response.data;
  }

  @override
  Future<UsersStatsModel> getUsersStats() async {
    final response = await _dataSource.getUsersStats();
    return response.data;
  }

  @override
  Future<WarehousesStatsModel> getWarehousesStats() async {
    final response = await _dataSource.getWarehousesStats();
    return response.data;
  }
}

/// –ü—Ä–æ–≤–∞–π–¥–µ—Ä —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
@riverpod
AdminStatsRepository adminStatsRepository(AdminStatsRepositoryRef ref) {
  final dataSource = ref.watch(adminStatsDataSourceProvider);
  return AdminStatsRepositoryImpl(dataSource);
}
